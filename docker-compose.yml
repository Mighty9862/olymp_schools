services:
  nginx:
    image: nginx:latest
    ports:
      - "8000:8000"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - auth-service
      - users-service
  
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  # AMQP порт
      - "15672:15672"  # Порт управления
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  auth_db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
      POSTGRES_DB: ${AUTH_DB_DATABASE}
    volumes:
      - ./auth-service/src/config/init.sql:/docker-entrypoint-initdb.d/init.sql
      - auth_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AUTH_DB_USER} -d ${AUTH_DB_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 5
  users_db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${USERS_DB_USER}
      POSTGRES_PASSWORD: ${USERS_DB_PASSWORD}
      POSTGRES_DB: ${USERS_DB_DATABASE}
    volumes:
      - ./users-service/src/config/init.sql:/docker-entrypoint-initdb.d/init.sql
      - users_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${USERS_DB_USER} -d ${USERS_DB_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 5

  auth-service:
    build: ./auth-service
    environment:
      PG_HOST: ${AUTH_DB_HOST}
      PG_USER: ${AUTH_DB_USER}
      PG_PASSWORD: ${AUTH_DB_PASSWORD}
      PG_DATABASE: ${AUTH_DB_DATABASE}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM: ${SMTP_FROM}
      RABBITMQ_URL: amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672
    ports:
      - "8001:8001"
    depends_on:
      auth_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  
  users-service:
    build: ./users-service
    environment:
      PG_HOST: ${USERS_DB_HOST}
      PG_USER: ${USERS_DB_USER}
      PG_PASSWORD: ${USERS_DB_PASSWORD}
      PG_DATABASE: ${USERS_DB_DATABASE}
      JWT_SECRET: ${JWT_SECRET}
      RABBITMQ_URL: amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672
    ports:
      - "8002:8002"
    depends_on:
      users_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

volumes:
  auth_db_data:
  users_db_data:
  rabbitmq_data:
  
  